name: Feature build

on:
  push:
    branches: [ 'feature/*' ]
    paths-ignore:
      - '**/README.md'

env:
  DOTNET_VERSION: '8.0.x' 
  BUILD_CONFIGURATION: 'Release'    
  SONAR_CLOUD_PROJECT_KEY: 'Xhaguatende_blazor-demo'

defaults:
  run:
    working-directory: ./src

# Ensures only one execution per branch will run at a time.
concurrency:
  group: ${{ github.ref }}
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17' # Set up Java 17, because SonarCloud requires it
        distribution: 'adopt' 

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache .NET Core packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Install SonarCloud
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Begin SonarCloud Scan
      run: |
            dotnet sonarscanner begin /o:"${{ secrets.SONAR_CLOUD_ORGANIZATION }}" \
                                    /k:"${{ env.SONAR_CLOUD_PROJECT_KEY }}" \
                                    /v:"${{ steps.gitversion.outputs.nuGetVersionV2 }}" \
                                    /d:sonar.host.url="${{ secrets.SONAR_CLOUD_URL }}" \
                                    /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
                                    /d:sonar.cs.opencover.reportsPaths=./CoverageResults/coverage.opencover.xml \
                                    /d:sonar.coverage.exclusions="**Test*.cs" \
                                    /d:sonar.qualitygate.wait=true

    - name: Build
      run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }} -p:GeneratePackageOnBuild=false

    - name: End SonarCloud Scan
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
